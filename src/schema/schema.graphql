## NOTE: This schema was generated by Graphback and should not be changed manually

"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

input CreateRegionInput {
  latitude: Float!
  longitude: Float!
  latitudeDelta: Float
  longitudeDelta: Float
}

input CreateTheftInput {
  _id: GraphbackObjectID
  region: CreateRegionInput!
  bike_description: String
  photos: [String!]
  comments: String
  date: GraphbackDateTime
  created_at: GraphbackDateTime
  user: CreateUserInput
}

input CreateUserInput {
  google_id: String!
  id_token: String!
}

scalar GraphbackDateTime

input GraphbackDateTimeInput {
  ne: GraphbackDateTime
  eq: GraphbackDateTime
  le: GraphbackDateTime
  lt: GraphbackDateTime
  ge: GraphbackDateTime
  gt: GraphbackDateTime
  in: [GraphbackDateTime!]
  between: [GraphbackDateTime!]
}

scalar GraphbackObjectID

input GraphbackObjectIDInput {
  ne: GraphbackObjectID
  eq: GraphbackObjectID
  le: GraphbackObjectID
  lt: GraphbackObjectID
  ge: GraphbackObjectID
  gt: GraphbackObjectID
  in: [GraphbackObjectID!]
  between: [GraphbackObjectID!]
}

input MutateRegionInput {
  latitude: Float
  longitude: Float
  latitudeDelta: Float
  longitudeDelta: Float
}

input MutateTheftInput {
  _id: GraphbackObjectID!
  region: MutateRegionInput
  bike_description: String
  photos: String
  comments: String
  date: GraphbackDateTime
  created_at: GraphbackDateTime
  user: MutateUserInput
}

input MutateUserInput {
  google_id: String
  id_token: String
}

type Mutation {
  createTheft(input: CreateTheftInput!): Theft
  updateTheft(input: MutateTheftInput!): Theft
  deleteTheft(input: MutateTheftInput!): Theft
}

input OrderByInput {
  field: String!
  order: SortDirectionEnum = ASC
}

input PageRequest {
  limit: Int
  offset: Int
}

type Query {
  getTheft(id: GraphbackObjectID!): Theft
  findThefts(filter: TheftFilter, page: PageRequest, orderBy: OrderByInput): TheftResultList!
}

type Region {
  latitude: Float!
  longitude: Float!
  latitudeDelta: Float
  longitudeDelta: Float
}

enum SortDirectionEnum {
  DESC
  ASC
}

input StringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  in: [String!]
  contains: String
  startsWith: String
  endsWith: String
}

type Subscription {
  newTheft(filter: TheftSubscriptionFilter): Theft!
  updatedTheft(filter: TheftSubscriptionFilter): Theft!
  deletedTheft(filter: TheftSubscriptionFilter): Theft!
}

"""@model"""
type Theft {
  _id: GraphbackObjectID!
  region: Region!
  bike_description: String
  photos: [String!]
  comments: String
  date: GraphbackDateTime
  created_at: GraphbackDateTime
  user: User
}

input TheftFilter {
  _id: GraphbackObjectIDInput
  bike_description: StringInput
  photos: StringInput
  comments: StringInput
  date: GraphbackDateTimeInput
  created_at: GraphbackDateTimeInput
  and: [TheftFilter!]
  or: [TheftFilter!]
  not: TheftFilter
}

type TheftResultList {
  items: [Theft]!
  offset: Int
  limit: Int
  count: Int
}

input TheftSubscriptionFilter {
  and: [TheftSubscriptionFilter!]
  or: [TheftSubscriptionFilter!]
  not: TheftSubscriptionFilter
  _id: GraphbackObjectIDInput
  bike_description: StringInput
  photos: StringInput
  comments: StringInput
  date: GraphbackDateTimeInput
  created_at: GraphbackDateTimeInput
}

type User {
  google_id: String!
  id_token: String!
}