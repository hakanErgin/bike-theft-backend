# types
"""
@model
"""
type Theft {
  _id: GraphbackObjectID
  region: Region!
  bike: Bike!
  comments: String
  date_time: DateTime!
  created_at: GraphbackDateTime!
  userId: GraphbackObjectID
}
type Region {
  latitude: Float!
  longitude: Float!
  latitudeDelta: Float
  longitudeDelta: Float
}
type Bike {
  type: String!
  brand: String!
  color: String!
  year: String
  frame_size: String
  wheel_size: String
  photos: [String]!
  ebike: Boolean!
}
type DateTime {
  date: GraphbackDateTime!
  time: String
}
"""
@model(find:false, findOne:false)
"""
type Feedback {
  _id: GraphbackObjectID
  created_at: GraphbackDateTime!
  type: String!
  description: String!
}
"""
@model(find:false, findOne:false)
"""
type User {
  _id: GraphbackObjectID
  google_id: String!
  google_name: String!
  """
  @oneToMany(field: 'user')
  """
  thefts: [Theft]
}
type Mutation {
  createUserOrSignIn(id_token: String!): User
  createTheft(id_token: String!, input: CreateTheftInput!): Theft
  deleteTheft(
    id_token: String!
    theftId: GraphbackObjectID!
    theftUserId: GraphbackObjectID!
  ): Theft
  createFeedback(type: String!, description: String!): Feedback
}
type Query {
  getUsersReportedThefts(id_token: String!): [Theft]
}

# inputs
input RegionInput {
  latitude: Float!
  longitude: Float!
  latitudeDelta: Float
  longitudeDelta: Float
}
input BikeInput {
  type: String!
  brand: String!
  color: String!
  year: String
  frame_size: String
  wheel_size: String
  photos: [String]!
  ebike: Boolean!
}
input DateTimeInput {
  date: GraphbackDateTime!
  time: String
}
input CreateTheftInput {
  _id: GraphbackObjectID
  region: RegionInput!
  bike: BikeInput!
  comments: String
  date_time: DateTimeInput!
  created_at: GraphbackDateTime!
  userId: GraphbackObjectID
}

# scalars
scalar GraphbackObjectID
scalar GraphbackDateTime
